package com.javarush.cryptoanalyzer.ostapenko;

import com.javarush.cryptoanalyzer.ostapenko.app.Application;

public class CryptoAnalyzer {
    public static void main(String[] args) {
        Application.launch(Application.class, args);
    }
}
//TODO пересмотреть все sonar предупреждения и исправить их.
//TODO в случае режима "Статический анализ", необходимо не только разблокировать меню для замены, но и заблокировать кнопку "запустить обработку"
//TODO Дописать документацию
//TODO доделать проверку ошибок(расширив список ошибок). Например на путь к файлу и прочему, напрямую использовать эти утилитарные классы во вью. расширения файла, одинаковые пути. Пустые файла и т.п.
//TODO Алфавит убрать как enum константу, так как в этом виде его тяжело расширять. Сделать один файл, где отдельные константы вроде русских букв разных регистров + цифрв и из этого проще потом модифицировать программу будет.


//TODO В статическом анализе добавить метод наибольших квадратов, так как видимо без него все работает кривовато при текущем определении и сопоставления частотности.
//TODO добавить режим демонстрации в gui интерфейс, когда заранее есть готовые пути к файлам
//TODO Вместо лога сделать запись ошибок куда-то в файл?
//TODO GUIVIEW убедиться, разделить на методы init component, actionlistener component, и в конце уже вызов сцены с ее параметрами.
//TODO сам guiview можно дополнительно для удобства разделить по логическим блокам или по окнам(вроде окно для одного шифра, окно для другого и тп.?)
// При необходимости можно выделить event в отдельный класс если их много,если не много то event можно и сами кнопки отрисовку в одном классе оставлять.
//TODO доделать README-файл?
